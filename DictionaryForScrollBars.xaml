<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- We are going to alter the vertical scroll bar's template -->

    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <!-- First up is the background panel for all the above mentioned controls -->
        <Grid Background="Transparent">
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="20"/>
                <!-- Up arrow row -->
                <RowDefinition Height="0.00001*"/>
                <!-- Track row -->
                <RowDefinition MaxHeight="20"/>
                <!-- Down arrow row -->
            </Grid.RowDefinitions>
            <Border Grid.RowSpan="3" CornerRadius="2" Background="White" Opacity="1" />
            <!-- Border for the scroll bar -->
            <RepeatButton Grid.Row="0" Command="ScrollBar.LineUpCommand" />
            <!-- Repeat button 1 (up arrow) -->
            <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                <!-- Track -->
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageUpCommand" Opacity="0" />
                    <!-- Repeat button 3 (left partition) -->
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb />
                    <!-- Thumb -->
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageDownCommand" Opacity="0" />
                    <!-- Repeat button 4 (right partition) -->
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Row="2" Command="ScrollBar.LineDownCommand" />
            <!-- Repeat button 2 (down arrow) -->
        </Grid>
    </ControlTemplate>
    
    
    <Style x:Key="{x:Type RepeatButton}" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="true"></Setter>
        <Setter Property="OverridesDefaultStyle" Value="true"></Setter>
        <Setter Property="IsTabStop" Value="false"></Setter>
        <Setter Property="Focusable" Value="false"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border x:Name="Border" Margin="0" CornerRadius="2" Opacity="0.3" Background="LightGray" BorderBrush="Gray" BorderThickness="1">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"></VisualState>
                                <VisualState x:Name="MouseOver"></VisualState>
                                <VisualState x:Name="Pressed"></VisualState>
                                <VisualState x:Name="Disabled"></VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Path x:Name="Arrow" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="White"></Path>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type Thumb}" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="true"></Setter>
        <Setter Property="OverridesDefaultStyle" Value="true"></Setter>
        <Setter Property="IsTabStop" Value="false"></Setter>
        <Setter Property="Focusable" Value="false"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border x:Name="Border" Margin="0" CornerRadius="2" Opacity="0.3" Background="LightGray" BorderBrush="Gray" BorderThickness="1">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"></VisualState>
                                <VisualState x:Name="MouseOver"></VisualState>
                                <VisualState x:Name="Pressed">
                                </VisualState>
                                <VisualState x:Name="Disabled"></VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Path x:Name="Arrow" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="White"></Path>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <!-- Our scroll bar is a vertical one. Thats why -->
                <Setter Property="Width" Value="8"/>
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>